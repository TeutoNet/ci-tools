#Note: You canâ€™t use YAML anchors across multiple files when leveraging the include feature. Anchors are only valid within the file they were defined in.

# $KUBE_INGRESS_BASE_DOMAIN delivers Basedomain configured for Kubernetes Cluster-Integration

stages:
- build
- deploy

#variables defined by Consumer Project:
#  CI_BASE_PROJECT
#  CI_TOOLS_TAG

.build_container_function: &build_container_function |

  function build_container() {
    
    CONTAINER_RUNTIME=$1
    DOCKER_CONTEXT=$2
    
    if [[ $# -ne 2 ]] ; then
      echo "You must provide exactly two arguments"
    elif [[ "$CONTAINER_RUNTIME" == "docker" ]] ; then
      docker_build $CONTAINER_RUNTIME $DOCKER_CONTEXT
    elif [[ "$CONTAINER_RUNTIME" == "podman" ]] ; then
      podman_build $CONTAINER_RUNTIME $DOCKER_CONTEXT
    else
      echo "Choose between docker and podman"
    fi

  }

  function docker_build() {
    docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
    docker build -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $DOCKER_CONTEXT
    docker push "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
  }

  function podman_build() {
    echo "Nothing happening yet"
  }

.deploy_function: &deploy_function |

  function deploy() {

    KUSTOMIZE_DIR=$1
    
    set -x

    cd $KUSTOMIZE_DIR
    kustomize edit set namespace $CI_COMMIT_REF_NAME
    kustomize edit set image image-name=$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    kustomize build . | kubectl apply -f -
    cd -

  }

.build_container:
  image: $CI_REGISTRY/$CI_BASE_PROJECT:$CI_TOOLS_TAG
  stage: build
  before_script:
  - *build_container_function
  script:
  - build_container docker .

.deploy_container:
  image: $CI_REGISTRY/$CI_BASE_PROJECT:$CI_TOOLS_TAG
  stage: deploy
  before_script:
  - *deploy_function
  script:
  - deploy $KUSTOMIZE_DIR
  only:
  - dev
  - master
  - prod